apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt' // need for Dagger

android {
    compileSdkVersion Config.compile_sdk
    buildToolsVersion Config.build_tools

    defaultConfig {
        applicationId Config.application_id
        minSdkVersion Config.min_sdk_ver
        targetSdkVersion Config.target_sdk

        versionCode Releases.version_code
        versionName Releases.version_name

        testInstrumentationRunner Config.test_runner

        // for DB schema
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility Config.java_version
        targetCompatibility Config.java_version
    }

    kotlinOptions {
        jvmTarget = Versions.jvm_target
    }
}

dependencies {

    implementation project(path: ':model')
    implementation project(path: ':utils')
    implementation project(path: ':core')
    implementation project(path: ':repository')
    implementation project(path: ':historyScreen')

    // General
    implementation Kotlin.stdlib
    implementation Kotlin.core
    testImplementation TestImpl.junit
    androidTestImplementation TestImpl.ext
    androidTestImplementation TestImpl.espresso

    // for Design
    implementation General.appcompat
    implementation General.material
    implementation General.constraint

    // for Glide
    implementation Glide.glide
    implementation Glide.playServices
    annotationProcessor Glide.compiler

    // for Koin
    implementation Koin.koinCore
    implementation Koin.koinAndroid
    implementation Koin.koinAndroidCompat

    // for Picasso
    implementation Picasso.picassoVersion

    //Test
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}